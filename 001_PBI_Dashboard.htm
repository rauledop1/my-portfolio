<!DOCTYPE html>
<!-- saved from url=(0065)https://holtzy.github.io/Crypto-Arbitrage/CONTENT/public_API.html -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">



<meta name="generator" content="pandoc">








<style>
.myheader {
  background-image: url("001_PBI_Dashboard_files/fire_hour.png");
    min-height: 400px; 
    background-size: 10% 100%; !important

    /* Create the parallax scrolling effect */
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  
  
    height: 10%; !important
    width: 100% !important;
  }
.mytitle{
  text-transform: uppercase;
  font-family: 'Montserrat';
  font-size: 200%;
  font-weight: 500;
  letter-spacing: 4px;
  }   
</style>

</head><body><div class="myheader" style="text-align: center;">
  <br>
  <div style="text-align: left; margin-left: 5%"><a href="index.html">HOME</a></div>
  <br><br>
  <br><br>
  <p class="mytitle"></p>
  <p style="color: grey; font-size: 16px;"></p>
  <br>
  <br>
  <br><br>
</div>





<title></title>

<script type="text/javascript" async="" src="./001_PBI_Dashboard_files/analytics.js"></script><script type="text/javascript" async="" src="./001_PBI_Dashboard_files/js"></script><script src="./001_PBI_Dashboard_files/jquery.min.js"></script>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link href="./001_PBI_Dashboard_files/lumen.min.css" rel="stylesheet">
<script src="./001_PBI_Dashboard_files/bootstrap.min.js"></script>
<script src="./001_PBI_Dashboard_files/html5shiv.min.js"></script>
<script src="./001_PBI_Dashboard_files/respond.min.js"></script>
<script src="./001_PBI_Dashboard_files/tabsets.js"></script>
<script src="./001_PBI_Dashboard_files/codefolding.js"></script>
<link href="./001_PBI_Dashboard_files/pagedtable.css" rel="stylesheet">
<script src="./001_PBI_Dashboard_files/pagedtable.js"></script>


<style type="text/css">code{white-space: pre;}</style>
<style type="text/css">
div.sourceCode { overflow-x: auto; }
table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0; padding: 0; vertical-align: baseline; border: none; }
table.sourceCode { width: 100%; line-height: 100%; }
td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
td.sourceCode { padding-left: 5px; }
code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
code > span.dt { color: #902000; } /* DataType */
code > span.dv { color: #40a070; } /* DecVal */
code > span.bn { color: #40a070; } /* BaseN */
code > span.fl { color: #40a070; } /* Float */
code > span.ch { color: #4070a0; } /* Char */
code > span.st { color: #4070a0; } /* String */
code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
code > span.ot { color: #007020; } /* Other */
code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
code > span.fu { color: #06287e; } /* Function */
code > span.er { color: #ff0000; font-weight: bold; } /* Error */
code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
code > span.cn { color: #880000; } /* Constant */
code > span.sc { color: #4070a0; } /* SpecialChar */
code > span.vs { color: #4070a0; } /* VerbatimString */
code > span.ss { color: #bb6688; } /* SpecialString */
code > span.im { } /* Import */
code > span.va { color: #19177c; } /* Variable */
code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
code > span.op { color: #666666; } /* Operator */
code > span.bu { } /* BuiltIn */
code > span.ex { } /* Extension */
code > span.pp { color: #bc7a00; } /* Preprocessor */
code > span.at { color: #7d9029; } /* Attribute */
code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
div.sourceCode {
  overflow-x: visible;
}
</style>
<style type="text/css">
  pre:not([class]) {
    background-color: white;
  }
</style>


<style type="text/css">
h1 {
  font-size: 34px;
}
h1.title {
  font-size: 38px;
}
h2 {
  font-size: 30px;
}
h3 {
  font-size: 24px;
}
h4 {
  font-size: 18px;
}
h5 {
  font-size: 16px;
}
h6 {
  font-size: 12px;
}
.table th:not([align]) {
  text-align: left;
}
</style>

<link rel="stylesheet" href="./001_PBI_Dashboard_files/style.css" type="text/css">





<style type="text/css">
.main-container {
  max-width: 940px;
  margin-left: auto;
  margin-right: auto;
}
code {
  color: inherit;
  background-color: rgba(0, 0, 0, 0.04);
}
img {
  max-width:100%;
  height: auto;
}
.tabbed-pane {
  padding-top: 12px;
}
button.code-folding-btn:focus {
  outline: none;
}
</style>



<div class="container-fluid main-container">

<!-- tabsets -->
<script>
$(document).ready(function () {
  window.buildTabsets("TOC");
});
</script>

<!-- code folding -->
<style type="text/css">
.code-folding-btn { margin-bottom: 4px; }
</style>
<script>
$(document).ready(function () {
  window.initializeCodeFolding("show" === "show");
});
</script>






<div class="fluid-row" id="header">

<div class="btn-group pull-right">
<button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span>Show Code</span> <span class="caret"></span></button>
<ul class="dropdown-menu" style="min-width: 50px;">
<li><a id="rmd-show-all-code" href="https://holtzy.github.io/Crypto-Arbitrage/CONTENT/public_API.html#">Show All Code</a></li>
<li><a id="rmd-hide-all-code" href="https://holtzy.github.io/Crypto-Arbitrage/CONTENT/public_API.html#">Hide All Code</a></li>
</ul>
</div>


</div>

<body>
  <h1>Power BI Report: FIRMS 48H World</h1>
  <iframe title="FIRMS_48H_WORLD" width="100%" height="800" src="https://app.powerbi.com/view?r=eyJrIjoiN2UyNjBjN2ItN2E3ZS00NzNjLTkwYWItMzljZjQyMjgxMmFmIiwidCI6IjU2NTgyYjllLTg4MjQtNDlkMC1hNjY1LWNkMzI4YzBlMDA0YSIsImMiOjR9" frameborder="0" allowFullScreen="true"></iframe>
</body>

<div class="mycontent">
<h1 id="public-exchange-api">Automated Power BI Dashboard with Python and DuckDB for Fire Monitoring</h1>
<hr>
<p>This project focuses on automating a spatial dashboard in <code>Power BI PRO</code>, integrating real-time fire data from the <a href="https://firms.modaps.eosdis.nasa.gov/active_fire/MODIS"> FIRMS</a> (Fire Information for Resource Management System) satellites. I used Python and <a href="https://duckdb.org/">DuckDB</a> for data processing and transformation, and spatial data management for fire occurrences and administrative boundaries.</p>
<p><br></p>
<p>The data pipeline involves fetching CSV files with fire detections, such as <code>MODIS_C6_1_South_America_48h.csv</code> and <code>MODIS_C6_1_Central_America_48h.csv</code>. The fire data includes satellite observations and acquisition timestamps, while the spatial coordinates (latitude and longitude) are transformed into geometric points. These data are processed with DuckDB’s SQL capabilities, including spatial functions such as <code>ST_Point()</code> and <code>ST_Intersects()</code>.</p>
<p><br></p>
<p>The fire data is then joined with country-level administrative boundaries, sourced from Harvard’s administrative dataset (Level 2), allowing for the identification of the exact regions where fires are occurring. By using Python, DuckDB, and SQL, the entire data preparation workflow is automated, and the resulting dataset is exported as a CSV file for seamless integration into <a href="https://www.microsoft.com/es-es/power-platform/products/power-bi">Power BI.</a></p>
<p><br></p>
<p>In Power BI, the dashboard visualizes fire occurrences over the last 48 hours, allowing users to filter by satellite, day/night detection, and geographic area (down to Level 2 administrative divisions). This automation ensures that the dashboard is updated in real time, providing actionable insights for monitoring fire activity across different regions.
</a></p>
</ul>
<h1 id="do-it-programming">Do it programming</h1>
<hr>
<p>It is totally possible to automate the data processing and visualization in a similar way. This is useful because it allows the fire detection data to be updated and processed automatically every couple of hours.</p>
<p>Here is an example using Python and DuckDB to retrieve recent fire hotspot data from MODIS FIRMS, process the spatial information, and join it with administrative boundaries, all in a few lines of code:</p>
<div class="sourceCode"><div class="row"><div class="col-md-12"><button type="button" class="btn btn-default btn-xs code-folding-btn pull-right" data-toggle="collapse" data-target="#rcode-643E0F361" aria-expanded="true" aria-controls="rcode-643E0F361"><span>Hide</span></button></div></div><div class="collapse r-code-collapse in" id="rcode-643E0F361"><pre class="sourceCode r"><code class="sourceCode r">
<body>
  <h2>Script</h2>
  <iframe
      src="https://nbviewer.jupyter.org/github/rauledop1/my-portfolio/blob/fd58a8c371422dae9a791af5c7da586bbcbaaeff/0001_dashboard_hotspot.ipynb"
      width="100%" 
      height="600px">
  </iframe>
</body>
&nbsp;
<hr>
<p style="text-align: center;">A work by <a href="https://github.com/holtzy/">Yan Holtz</a> for <a href="https://data-to-viz.com/">data-to-viz.com</a></p>

<!-- Add icon library -->
<link rel="stylesheet" href="./001_PBI_Dashboard_files/font-awesome.min.css">

<!-- Add font awesome icons -->
<p style="text-align: center;">
	<a href="https://twitter.com/r_graph_gallery?lang=en" class="fa fa-twitter"></a>
	<a href="https://www.linkedin.com/in/yan-holtz-2477534a/" class="fa fa-linkedin"></a>
	<a href="https://github.com/holtzy/" class="fa fa-github"></a>
</p>

<!-- Global site tag (gtag.js) - Google Analytics -->
<script async="" src="./001_PBI_Dashboard_files/js(1)"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-79254642-3');
</script>


&nbsp;




</div>

<script>

// add bootstrap table styles to pandoc tables
function bootstrapStylePandocTables() {
  $('tr.header').parent('thead').parent('table').addClass('table table-condensed');
}
$(document).ready(function () {
  bootstrapStylePandocTables();
});


</script>




</body></html>